---
title: "Assignment 2: Regression models, predicting from data"
author: "Sivert Helland Veseth"
format: 
  html:
    code-fold: true
execute:
  warning: false  # Skjuler varselmeldinger
editor_options: 
  chunk_output_type: console
crossref:
  fig-title: "Figur"
  tbl-title: "Tabell"
---


## Overordnet for rapporten

Denne oppgaven er delt inn tre separate deler som tar for seg konsepter innenfor analyse av data og regresjon. I del 1 kalkulerer vi laktat terskler, og ser nærmere på reliabiliteten mellom to ulike terskelnivåer. Del 2 bruker vi molekylær data til å predikere størrelsen på DNA-fragment ved hjelp av en veileder. I del 3 skal vi se nærmere på om det finnes en lineær sammenheng mellom to valgte variabler fra datasettet `hypertrophy`i datapakken `exscidata`. Hver del vil ha sin egen introduksjon, metode, resultatdel og diskusjon.  

All R-kode som er brukt i denne deloppgaven, er samlet og plassert helt til slutt i teksten, like før neste deloppgave.


## Del 1: Laktat terskler

### Introduksjon

Laktatterskel (LT) er en sentral variabel innen treningsfysiologi, spesielt i utholdenhetsidretter, hvor den brukes til å forutsi prestasjon, styre intensiteten av treningsøkter og evaluere effekten av trening [@machado2012; @poole2021]. LT representerer den arbeidsintensiteten hvor produksjonen av laktat i blodet overstiger kroppens evne til å fjerne det, noe som fører til en akkumulering av laktat i blodet (@poole2021, s.738). Dette markerer overgangen fra en stabil til en progressivt økende metabolsk belastning.

Det finnes mange ulike metoder for å bestemme LT, og en av de mest brukte er å måle intensitetene ved faste blodlaktatnivåer, som 2 og 4 mmol/L, ved hjelp av regresjonsmodeller som predikerer intensiteten ved disse verdiene (@kindermann1979; @RN2511). Andre tilnærminger, som "maximal-deviation method" (Dmax), beskrevet av Machado et al. (2012), tilbyr analyser som kan bedre reflektere de underliggende metabolske mekanismene som er bestemmende for prestasjon [@machado2012]. 

For å evaluere påliteligheten av disse målmetodene, er det viktig å vurdere testens reliabilitet. Dette kan kvantifiseres gjennom variasjon innen samme person, også kjent som "typical error", på norsk typisk feil (@RN130, s.2). Typisk feil forteller noe om den forventede variasjonen mellom målinger på samme individ og kan uttrykkes som en prosentandel av gjennomsnittsverdien, kjent som koeffisienten av variasjon (CV) (@RN130, 3). CV er dimmensjonsløs og åpner opp for muligheten å sammenligne reliabiliteten mellom personer med ulik prestasjonsevne, og er derfor et relevant mål i denne rapporten. 

Laktatterskelen er en viktig fysiologisk parameter for å forstå sammenhengen mellom treningsintensitet og metabolsk respons. Selv om det finnes flere metoder for å beregne laktatterskel, er det vanlig å bruke faste blodlaktatnivåer som referansepunkter, som 2 mmol/L og 4 mmol/L, for å forutsi treningsintensitet [@RN1956, kap. 6]. Formålet med denne deloppgave er å sammenligne reliabiliteten til disse tersklene, målt som typisk feil i prosent av gjennomsnittet.

På grunn av begrenset datainnsamling fra vårt reliabilitetsforsøk, benyttes datasettet fra `cyclingstudy` som grunnlag for analysen. Dette gir mulighet til å beregne og evaluere reliabiliteten av de to tersklene og utforske deres egnethet i praksis.

### Metode

For å ha laktatterskler til å undersøke, ble det benyttet et åpent datasett `cyclingstudy`, som inneholdt en rekke fysiologiske variabler fra en sykkelstudie (@sylta2016). Fra dette datasettet ble det hentet ut informasjon om treningsintensitet, målt i watt, og blodlaktatkonsentrasjoner. Ved hjelp av lineære og polynomiske modeller ble det beregnet to laktatterskler, 2 mmol/L og 4 mmol/L, for å evaluere forholdet mellom treningsintensitet og laktatakkumulering. Prediksjoner fra hver modell ble brukt til å identifisere wattverdier nærmest tersklene 2 mmol/L og 4 mmol/L. Den tredjegradspolynomiske modellen ble valgt for å illustrere resultater i detalj.

Data ble filtrert for en deltaker (subject = 10) ved et bestemt tidspunkt i studien (pre). Laktatkonsentrasjoner mellom 225 og 375 watt ble omformet til et langt format for enkel visualisering og analyse. Laktatnivåene ble analysert for å finne treningsintensiteter nærmest tersklene 2 mmol/L og 4 mmol/L. 

Restverdiene (residuals) fra hver modell ble beregnet for å vurdere hvor godt modellene beskrev dataene. Disse restverdiene ble visualisert i @fig-residualer for å illustrere modellenes avvik fra de observerte verdiene ved ulike treningsintensiteter. Viderre ble de ulike modellene, inkludert lineær, andre-, tredje- og fjerdegradspolynomiske tilpasninger, brukt for å sammenligne hvordan hver modelle beskriver sammenhengen mellom watt og blodlaktatkonsentrasjon, grafisk fremstilt i @fig-modeller. 

Reliabilitet til tersklene ble analysert ved å beregne typisk feil $TE = \frac{SD_{\text{diff}}}{\sqrt{2}}$, som prosentandel av gjennomsnittsverdien, altså koeffisienten av variasjon (CV) $CV (\%) = \frac{\text{Typical Error}}{\text{Mean}}\times 100$. 

All datahåndtering, analyse og grafisk fremstilling ble utført i R (versjon 4.1.1).


### Resultat
@fig-modeller viser sammenhengen mellom treningsintensitet (watt) og blodlaktatkonsentrasjon, sammen med tilpasninger basert på ulike modeller. De observerte dataene er koblet med rette linjer, her synlig som stiplet linje, som interpolerer mellom puntkene. Tersklene 2 mmol/L (gul) og 4 mmol/L (rød) er markert med horisontale linjer, mens de vertikale linjene (blå og grønn) markerer hvor tersklene møter den stiplete linjen på x-aksen, basert på visuell estimering.  

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-modeller
#| fig-cap: "Tilpasning av ulike modeller til sammenhengen mellom treningsintensitet (watt) og blodlaktatkonsentrasjon. Grafen viser lineær modell (rød linje), andregradspolynomisk modell (blå linje), tredjegradspolynomisk modell (grønn linje), og fjerdegradspolynomisk modell (oransje linje), sammen med de observerte dataene (punkter). Tersklene ved 2 mmol/L (gul linje) og 4 mmol/L (rød linje) er indikert."


### laste ned nødvendige packages
library(tidyr)
library(tidyverse)
library(ggplot2)
library(exscidata)


###laste inn data
data("cyclingstudy")


### Estimering av laktatterskelen og treningsintensiteten ved 4mmol L-1 

cyclingstudy %>%
  # utvalg av nødvendige kolonner i analysen.
  select(subject, group, timepoint, lac.225:lac.375) %>%
  # Kun ein deltaker og ett tidspunkt.
  filter(timepoint == "pre", subject == 10) %>%
  # lang format ved å bruke laktatkolonnene.
  pivot_longer(names_to = "watt",
               values_to = "lactate",
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.225:lac.375) %>%
  # Plotte data, group = subject nødvendig for å sammenkoble punktene.
  ggplot(aes(watt, lactate, group = subject)) +
  geom_line(lty = 2) +
  geom_point(shape = 21, fill = "lightblue", size = 2.5) +
  # Linjer på spesifikke punktene for 2mmol og 4mmol, samt skjeringspunktet mellom linjene.
  geom_hline(yintercept = 4, color = "red") +
  geom_hline(yintercept = 2, color = "gold") +
  geom_vline(xintercept = 341.5, color = "blue") +
  geom_vline(xintercept = 308, color = "green") +
  # legge til en strak linje fra den lineære modelen.
  geom_smooth(method = "lm", se = FALSE, formula = y ~ x, color = "#e41a1c") +
  
  # poly(x, 2) Legger til en andregradsplynomisk modell.
  geom_smooth(method = "lm", se = FALSE, formula = y ~ poly(x, 2), color = "#377eb8") +
  # poly(x, 3) Legger til en tredjegradsplynomisk modell.
  geom_smooth(method = "lm", se = FALSE, formula = y ~ poly(x, 3), color = "#4daf4a") +
  # poly(x, 4) Legger til en fjerdegradsplynomisk modell.
  geom_smooth(method = "lm", se = FALSE, formula = y ~ poly(x, 4), color = "#ff7f00")

```

De ulike modellene ble sammenlignet med hensyn til hvordan de beskriver dataene, og evaluert ved restverdier (@fig-residualer). Samlet sett gir de tredje- og fjerdegradspolynomiske modellene de beste tilpasningene, særlig nær tersklene ved 2 mmol/L og 4 mmol/L, mens den lineære modellen viser større avvik ved høyere wattverdier. Andregradspolynomiske modellen ligger mellom disse to ytterpuntkene. 

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-residualer
#| fig-cap: "Restverdier for de ulike modellene (lineær, andregradspolynomisk, tredjegradspolynomisk og fjerdegradspolynomisk). Grafen viser hvordan modellene avviker fra de observerte verdiene over treningsintensiteter (watt), med hver modell representert av forskjellige farger."

lactate <- cyclingstudy %>%
  # utvalg av nødvendige kolonner i analysen.
  select(subject, group, timepoint, lac.225:lac.375) %>%
  # Kun ein deltaker og ett tidspunkt.
  filter(timepoint == "pre", subject == 10) %>%
  # lang format ved å bruke laktatkolonnene.
  pivot_longer(names_to = "watt",
               values_to = "lactate",
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.225:lac.375) %>%
  # Fjerne dei ugyldige veriene NA for å hindre feilmeldinger.
  filter(!is.na(lactate))

# Legger til en strak linje fra modelen.
m1 <- lm(lactate ~ watt, data = lactate)

# Legger til en andregradsplynomisk modell.
m2 <- lm(lactate ~ poly(watt, 2, raw = TRUE), data = lactate)

# Legger til en tredjegradsplynomisk modell.
m3 <- lm(lactate ~ poly(watt, 3, raw = TRUE), data = lactate)

# Legger til en fjerdegradsplynomisk modell.
m4 <- lm(lactate ~ poly(watt, 4, raw = TRUE), data = lactate)

# Lagre alle restverdiene som nye variabler.
lactate$resid.m1 <- resid(m1)
lactate$resid.m2 <- resid(m2)
lactate$resid.m3 <- resid(m3)
lactate$resid.m4 <- resid(m4)

lactate %>%
  # Samle all data fra modelleme.
  pivot_longer(names_to = "model",
               values_to = "residual",
               names_prefix = "resid.",
               names_transform = list(residual = as.numeric),
               cols = resid.m1:resid.m4) %>%
  # Plotte verdiene fra den observerte watten på x aksen og restverdiene på y aksen
  ggplot(aes(watt, residual, fill = model)) + geom_point(shape = 21, size = 3) +
  
  # For å ha samme farger som over, bruker me scale fill manual.
  scale_fill_manual(values = c("#e41a1c", "#377eb8", "#4daf4a", "#ff7f00"))
```

@tbl-2mmol og @tbl-4mmol viser estimerte watt verdier ved laktattersklene 2mmol/L og 4 mmol/L, basert på de ulike modellene. Gjennomsnittet av intensitetene for hver terskel er også inkludert. Disse predikasjonene ble beregnet ved interpolasjon mellom de observerte datapunktene for blodlaktatkonsentrasjon. 

``` {r}
#| warning: false
#| message: false
#| echo: false
#| label: tbl-2mmol
#| tbl-cap: "De estimerte treningsintensitetene ved laktatterksel 2mmol/L basert på de fire ulike modellene: lineær (m1), andregradspolynomisk (m2), tredjegradspolynomisk (m3), og fjerdegradspolynomisk (m4)."


library(gt)

# Ny dataramme for prediksjoner
ndf <- data.frame(watt = seq(from = 225, to = 350, by = 0.1))

# Prediksjoner fra modellene
ndf$predictions_m1 <- predict(m1, newdata = ndf)  # Lineær modell
ndf$predictions_m2 <- predict(m2, newdata = ndf)  # Andregradspolynomisk modell
ndf$predictions_m3 <- predict(m3, newdata = ndf)  # Tredjegradspolynomisk modell
ndf$predictions_m4 <- predict(m4, newdata = ndf)  # Fjerdegradspolynomisk modell

# Beregn terskel 2 mmol/L
lactate_threshold_2mmol <- data.frame(
  Model = c("m1", "m2", "m3", "m4"),
  Watt = c(
    ndf %>% filter(abs(predictions_m1 - 2) == min(abs(predictions_m1 - 2))) %>% pull(watt),
    ndf %>% filter(abs(predictions_m2 - 2) == min(abs(predictions_m2 - 2))) %>% pull(watt),
    ndf %>% filter(abs(predictions_m3 - 2) == min(abs(predictions_m3 - 2))) %>% pull(watt),
    ndf %>% filter(abs(predictions_m4 - 2) == min(abs(predictions_m4 - 2))) %>% pull(watt)
  )
)

# Beregn terskel 4 mmol/L
lactate_threshold_4mmol <- data.frame(
  Model = c("m1", "m2", "m3", "m4"),
  Watt = c(
    ndf %>% filter(abs(predictions_m1 - 4) == min(abs(predictions_m1 - 4))) %>% pull(watt),
    ndf %>% filter(abs(predictions_m2 - 4) == min(abs(predictions_m2 - 4))) %>% pull(watt),
    ndf %>% filter(abs(predictions_m3 - 4) == min(abs(predictions_m3 - 4))) %>% pull(watt),
    ndf %>% filter(abs(predictions_m4 - 4) == min(abs(predictions_m4 - 4))) %>% pull(watt)
  )
)


# Kombiner tersklene i en tabell
lactate_thresholds <- data.frame(
  Terskel = c(rep("2 mmol/L", 4), rep("4 mmol/L", 4)),
  Modell = c(lactate_threshold_2mmol$Model, lactate_threshold_4mmol$Model),
  Watt = c(lactate_threshold_2mmol$Watt, lactate_threshold_4mmol$Watt)
)


# Beregn gjennomsnitt for hver terskel
mean_2mmol <- mean(lactate_threshold_2mmol$Watt)
mean_4mmol <- mean(lactate_threshold_4mmol$Watt)

# Opprett separate datarammer for tersklene
threshold_2mmol <- lactate_thresholds %>%
  filter(Terskel == "2 mmol/L") %>%
  bind_rows(data.frame(
    Terskel = "Gjennomsnitt",
    Modell = "Gjennomsnitt",
    Watt = mean(lactate_threshold_2mmol$Watt)
  ))

threshold_4mmol <- lactate_thresholds %>%
  filter(Terskel == "4 mmol/L") %>%
  bind_rows(data.frame(
    Terskel = "Gjennomsnitt",
    Modell = "Gjennomsnitt",
    Watt = mean(lactate_threshold_4mmol$Watt)
  ))

# Lag tabell for 2 mmol/L
table_2mmol <- threshold_2mmol %>%
  select(Modell, Watt) %>% # Fjerner overflødige kolonner
  gt() %>%
  tab_header(
    title = "Laktatterskel ved 2 mmol/L",
    subtitle = "Treningsintensitet per modell og gjennomsnitt"
  ) %>%
  cols_label(
    Modell = "Modell",
    Watt = "Treningsintensitet (Watt)"
  ) %>%
  fmt_number(
    columns = "Watt",
    decimals = 1
  ) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      rows = threshold_2mmol$Modell == "Gjennomsnitt"
    )
  ) %>%
  tab_source_note(
    source_note = "Tabellen viser modellene og gjennomsnittet for terskelen ved 2 mmol/L."
  )

# Vis tabellen
table_2mmol
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: tbl-4mmol
#| tbl-cap: "De estimerte treningsintensitetene ved laktatterksel 2mmol/L basert på de fire ulike modellene: lineær (m1), andregradspolynomisk (m2), tredjegradspolynomisk (m3), og fjerdegradspolynomisk (m4)."

# Lag tabell for 4 mmol/L (uten duplikatkolonner)
table_4mmol <- threshold_4mmol %>%
  select(Modell, Watt) %>% # Fjerner overflødige kolonner
  gt() %>%
  tab_header(
    title = "Laktatterskel ved 4 mmol/L",
    subtitle = "Treningsintensitet per modell og gjennomsnitt"
  ) %>%
  cols_label(
    Modell = "Modell",
    Watt = "Treningsintensitet (Watt)"
  ) %>%
  fmt_number(
    columns = "Watt",
    decimals = 1
  ) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      rows = threshold_4mmol$Modell == "Gjennomsnitt"
    )
  ) %>%
  tab_source_note(
    source_note = "Tabellen viser modellene og gjennomsnittet for terskelen ved 4 mmol/L."
  )

# Vis tabellen
table_4mmol
```

Estimatene variere noe mellom modellene for begge terskler. For 2 mmol/L varierer de fra 287.7 W (lineær modell) til 311.1 W (fjerdegradspolynomisk), mens snittet ble på 304.1 W. For 4 mmol/L varierte de fra 342.8 W (andregradspolynomisk modell) til 350 W (lineær modell), med et snitt på 344.9 W. Dette illustrerer hvordan valg av modell, spesielt ved høyere intensiteter kan påvirke predikasjonene. 


Under i @tbl-reliabilitet, presenteres mål på reliabilitet ved tersklene 2 mmol/L og 4 mmol/L. Ved terskel 2 mmol/L har trenigsintensiteten en høyere typisk feil (7.87 W) og koeffisient av variasjon (2.59%) sammenlignet med terskel ved 4 mool/L, hvor typisk feil og CV% er henholdsvis 2.43 W og 0.70%. Man kan derfor antyde at reliabiliteten er bedre ved høyere terskler (4 mmol/L) enn ved lavere terskler (2 mmol/L). 

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: tbl-reliabilitet
#| tbl-cap: "Beregnede verdier av gjennomsnittlig treningsintensitet (watt), standardavvik for differanser (watt), typisk feil (watt), og koeffisient av variasjon (CV %), ved 2 mmol/L og 4 mmol/L"


library(dplyr)
library(gt)

# Beregn gjennomsnitt direkte for 2 mmol/L og 4 mmol/L
mean_2mmol <- mean(lactate_threshold_2mmol$Watt)
mean_4mmol <- mean(lactate_threshold_4mmol$Watt)

# Beregn standardavviket (SD_diff) for hver terskel
sd_diff_2mmol <- sd(lactate_threshold_2mmol$Watt)
sd_diff_4mmol <- sd(lactate_threshold_4mmol$Watt)

# Beregn typisk feil (TE)
te_2mmol <- sd_diff_2mmol / sqrt(2)
te_4mmol <- sd_diff_4mmol / sqrt(2)

# Beregn koeffisient av variasjon (CV %)
cv_2mmol <- (te_2mmol / mean_2mmol) * 100
cv_4mmol <- (te_4mmol / mean_4mmol) * 100

# Kombiner alt i en dataramme
reliability_data <- data.frame(
  Terskel = c("2 mmol/L", "4 mmol/L"),
  Mean_Watt = c(mean_2mmol, mean_4mmol),
  SD_diff = c(sd_diff_2mmol, sd_diff_4mmol),
  Typical_Error = c(te_2mmol, te_4mmol),
  CV_Percent = c(cv_2mmol, cv_4mmol)
)

# Lag en tabell med gt
reliability_table <- reliability_data %>%
  gt() %>%
  tab_header(
    title = "Reliabilitet ved ulike terskler",
    subtitle = "Typisk feil og koeffisient av variasjon"
  ) %>%
  cols_label(
    Terskel = "Terskel (mmol/L)",
    Mean_Watt = "Gjennomsnitt (Watt)",
    SD_diff = "SD Diff (Watt)",
    Typical_Error = "Typisk Feil (Watt)",
    CV_Percent = "CV (%)"
  ) %>%
  fmt_number(
    columns = c(Mean_Watt, SD_diff, Typical_Error, CV_Percent),
    decimals = 2
  ) %>%
  tab_source_note(
    source_note = "Tabellen viser beregnet reliabilitet ved tersklene 2 mmol/L og 4 mmol/L."
  )

# Vis tabellen
reliability_table
```


## Del 2: Forutsi størrelser på DNA fragmenter eller stiningene i en qPCR-kalibreringskurve

### Introduksjon

Sportslige prestasjoner påvirkes av både miljømessige og genetiske faktorer (@Tucker555). Et viktig gen i denne sammenhengen er *ACTN3*. som koder for proteinet alpha-actinin-3. Dette proteinet finnes nesten utelukkende i hurtige muskelfibre og er kjent for sine rolle i kraftbaserte aktiviteter som sprint og vektløfting (@Mikami2014; @NORTH1996; @Schadock2015). Mutasjoner i genet kan føre til en ikke-funksjonell variant, kjent som R577X-polymorfismen, som resulterer i manglende produksjon av proteinet (@North1999). Genotyper som inneholder R allelet, er assosiert med bedre ytelse i kraftfulle og eksplosive idretter, mens X-allelet kan være gunstig for utholdenhet (@Mikami2014; @Yang2003, s.629-630).

For å analysere genotypene til *ACTN3*-genet, vil molekylære teknikker som PCR (polymerasekjedereaksjon) og elektroforese være nyttig. PCR muliggjør spesifikk amplifisering av DNA-sekvenser, slik at man kan identifisere genetiske variasjoner (@Schadock2015). Elekttroforese i agarosegel brukes deretter til å separere DNA-fragmentene basert på størrelse, noe som vil gi en visuell representasjon av genotypene (@Schadock2015).

I denne delen av oppgaven ble *ACTN3*-genet undersøkt gjennom DNA-analyse, som ble gjennomført som en del av et forsøk på molekylærelaboratoriet. Ved hjelp av PCR og elektroforse forsøkte man å separere og analyser fragmentstørrelsene til *ACTN3*-genet for å kartlegge genotypen i de ulike prøvene, for å innsikt i genetiske bidrag til fysisk ytelse og idrettsprestasjoner.


### Metode

#### DNA-ekstraksjon

DNA ble ekstrahert fra blodprøver samlet i prøverør med EDTA (etylendiamintetraeddiksyre) ved hjelp av en modifisert protokoll basert på Bartlett og Stirling (@bartlett2003, kap 6). Etter overføringen av 3 mL blod til et 15 mL rør, ble cellene lysert med Reagens A og sentrifugert (3000 g i 5 min) for å isolere en cellepellet. Pelleten ble resuspendert i Reagens B, og DNA ble frigjort ved tilsetning av natriumperklorat (250 μl av 5 M sodium perchlorate) og inkubasjon ved 65 °C. Etter avkjøling i romtemperatur, ble iskald kloroform (2 mL) tilsatt for å skille DNA fra andre cellekomponenter, og mikset i en roterende misker i mellom 30 til 60 min. Etterpå ble den sentrifugert etterfulgt av sentrifugering (2400 g i 2 min) for å hente ut den øvre delen av prøven. DNA ble uthentet med kald 100% etanol (2-3 mL), tørket og resuspendert i TE-buffer (200 ul). Konsentrasjonen ble målt med et spektrofotometer, og verdiene låg rundt 200 og 500 ng/ul.

#### Bestemmelse av *ACTN3*-genotypen 

*ACTN3*-genotypen ble bestemt ved bruk av en fire-primer PCR-protokoll tilpasset fra Schadock et al. (2015) (@Schadock2015). PCR-reaksjonen ble satt opp i et totalvolum på 20 µL, bestående av 10 µL 2X master mix, 5 µL primermiks (inneholdt hsACTN3_F1, hsACTN3_R1, hsACTN3Tif_F2, og hsACTN3Cir_R2) og 5 µL DNA-prøve (se over). PCR-syklusen inkluderte initial denaturering ved 95 °C i 2 minutter, etterfulgt av 35 sykluser med 95 °C i 10 sekunder, og 72 °C i 45 sekunder, og til slutt ved 72 °C i 2 minutter.


#### Elektroforese for analyse av PCR-produkter
PCR-produktene ble analysert ved hjelp av agarosegelektroforese i en 2 % agrosegel. Gelen ble fremstilt ved å løse 2 g agarose i 100 mL 1X TBE-buffer, med tilsetning av 10 µL Sybr Safe for visualisering av DNA. Løsningen ble oppvarmet til klarhet, avkjølt til cirka 60 grader, og deretter helt i en støpeform med gelkammer. Etter cirka 1 time hadde gelet blitt fast, og ble plassert i en horisontal elektroforeseenhet fylt med 1X TBE-buffer

DNA-prøvene ble blandet med 6X farge (1 µL per 5 µL DNA-prøve), og 2-5 µL av hver prøve ble lastet i egne brønner sammen med en DNA-stige som referanse. Eletroforesen ble utført ved 150 V i cirka 1 time, inntil fargeindikatoren hadde vandret rundt 80% av gelens lengde. Gelen med prøvene ble visualisert i en G ved bruk av UV-lys og Sybr Green-instillinger. 


#### Analyse av PCR-produkter med Iamge J og R

For å bestemme størrelsen på PCR-produktene ble bildeanalyse utført med IamgeJ Fiji. Gelbildet ble invertert, rotert og trimmet for å isolere prøvene og DNA-stigen. Ved bruk av rektangelverktøyet ble stigen og prøvene markert, og toppunktene i intensitetsgrafene ble registret. Disse punktene representerte DNA-fragmentenees migrasjonsavstand, og dataene ble eksportert til Excel for videre analyse.

I R ble en kalibreringskurve laget basert på DNA-stigen (@fig-kali), hvor logaritmen av molekylvekten ble plottet mot migrasjonsavstanden. Kalibrering ble utført ved hjelp av en polynommodell for å sikre høy presisjon. Denne modellen ble deretter brukt til å estimere molekylstørrelsen for de ukjente prøvene. Modellen ble vurdert basert på $R^2$-verdien fra lineær regresjon, og verdien lå nær 1, noe som indikerte høy modellpresisjon. Den justerte modellen ble deretter brukt til å estimere molekylstørrelsene for de ukjente prøvene, som ble beregnet på migrasjonsavstandene fra gelelektroforesen. 

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-kali
#| fig-cap: "Kalibreringskurve basert på DNA-stigen."

library(readxl)

dat <- read_excel("data/resultat_dna_analyse.xlsx")

# lage dataramme for å finne avstand og molekylærvekt

ladder <- data.frame(dist = c(36, 59.5, 86.5,
                              119.5, 159.5, 208.5,
                              269.5, 351.5, 396.5,
                              455.5, 521.5, 599.5, 701.5),
                     mw = c(1000, 900, 800, 
                            700, 600, 500, 
                            400, 300, 250, 
                            200, 150, 100, 50))

# lage ny dataramme med ukjente variabler

unknown <- data.frame(dist = c(258.5, 262.5, 265.5, 335.5))


# lage en kalibreringsmodell ved hjelp av stigen

library(tidyverse)

ggplot(data = data.frame(x = c(36, 59.5, 86.5,
                              119.5, 159.5, 208.5,
                              269.5, 351.5, 396.5,
                              455.5, 521.5, 599.5, 701.5), 
                         y = c(1000, 900, 800, 
                            700, 600, 500, 
                            400, 300, 250, 
                            200, 150, 100, 50)), 
       aes(x, y)) + geom_point() +
  
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), 
                    color = "green", se = FALSE)+
  
  scale_y_continuous(limits = c(0, 1000)) +
  
  scale_x_continuous(limits = c(0, 750))

```


```{r}
#| warning: false
#| message: false
#| echo: false


# Fit the model
cal <- lm(log(mw) ~ dist, data = ladder)

# Check model performance, R^2 should be ~ 1.
summary(cal)

# Estimate molecular weights from migration distances
preds <- exp(predict(cal, newdata = unknown)) 


```

### Resultater

Analyse av PCR-produktene viste at DNA-fragmentet i brønn 1 (prøve 1) hadde en estimert båndstørrelse på 407 bp, mens brønn 2 (prøve 2) viste et fragment på 401 bp. I brønn 3 (prøve 3) ble det identifisert to fragmenter, med størrelser på henholdsvis 396 bp og 296 (@tbl-DNA). Disse resultatene ble beregnet basert på kalibreringskurven som ble laget ved hjelp av DNA-stigen, og fragmentstørrelsene reflekterer migrasjonsmønsteret observert i gelanalysen. 

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: tbl-DNA
#| tbl-cap: "Resultater fra PCR-analyse: Estimert båndstørrelse for DNA-fragmenter basert på agarosegelelektroforese."

# Last inn nødvendig pakke
library(gt)

# Opprette data
resultater <- tibble(
  Brønn = c(1, 2, 3),
  `Båndstørrelse (bp)` = c("407", "401", "396, 296")
)

# Lage en tabell med gt
resultater %>%
  gt() %>%
  tab_header(
    title = "Resultater fra PCR-analyse"
  ) %>%
  cols_label(
    Brønn = "Brønn",
    `Båndstørrelse (bp)` = "Båndstørrelse (bp)"
  ) %>%
  fmt_number(
    columns = everything(),
    decimals = 0
  )
```

### Diskusjon

Denne analysen viste at ingen av DNA-fragmentene hadde nøyaktig den forventede størrelsen på 413 bp (R/R) eller 318 bp (X/X) (@Schadock2015). Fragmentene fra brønn 1 (417bp) og brønn 2 (401 bp) ligger imidlertid nær den forventede størrelse for R/R-genotypen, mens brønn 3 (396 bp og 296 bp) indikerer en mulig heterozygot genotype (R/X) (@Schadock2015). Avvikene kan forklares med flere faktorer, inkludert tekniske og menneskelige feil under eksperimentet. 

Blant de tekniske feilene er kvaliteten på gelbildet noe som kan ha bidratt til usikkerhet i målingene, ettersom dårlig oppløsning eller utilstrekkelig kontrast gjør det vanskelig å nøyaktig identifisere båndenes plassering. Videre kan kalibreringsmodellen ha blitt påvirket av små feil i dataregistreringen, noe som kan ha påvirket nøaykatigheten i estimeringen av fragmentstørrelsene. 

Menneskelige feil er også en viktig faktor å vurdere. Feil pipetering kan ha ført til variasjon i mengden DNA eller reagenser, noe som kan påvirke amplifiseringen. Under elektroforese kan små variasjoner i prøvelasting, som ulik mengde DNA-prøve i brønnene, ha forårsaket skjevheter i båndenes intensitet og plassering. I tillegg kan subjektiv tolkning av gelbilder uten digitale analyseverktøy føre til feiltolkninger. 

Denne oppgaven viste at PCR-analysen ga fragmenter som lå nær forventede størrelser, men med mindre avvik, noe som kan tilskrives både tekniske og menneskelige feil. Dette understreker viktigheten av presisjon i laboratoriearbeid og bruk av objektive metoder for dataanalyse.


## Del 3: Tolkning av regresjonsmodell

### Introduksjon

Muskeltilpasninger til trening avhenger av en kompleks kombinasjon av genetiske og miljømessige faktorer. Myonuclei (cellkjerner), som finnes i muskelfibrene, spiller en nøkkelrolle i å regulere musklenes kapasitet for proteinsyntese og dermes også evnen til å utvikle styrke og kraft [@mcardle2014, kap 22]. Antall myonuclei i type-II muskelfibre er spesielt relevant, da disse fibrene er avgjørende for eksplosive bevegelser og maksimal styrke [@mcardle2014, kap 22]. Samtidig er det uklart i hvilken grad treningserfaring, mål som antall år med systematisk trening, kan påvirke antallet myonuclei [@mcardle2014, s.535]. 

Ved å undersøke sammenhengen mellom antall myonuclei i type II muskelfibre og treningsalder, kan man belyse om langvarig trening har en målbar effekt på muskelfiberens egenskaper. Dette kan gi innsikt som er relevant både for praktisk trening og for å forstå mekanismene bak muskeltilpasning.

**Spørsmålet**: Finnes det en lineær sammenheng mellom antall myonuclei per type-II muskelfiber og treningsalder? 

### Metode

For å undersøke sammenhengen mellom antall myonuclei per type-II muskelfiber og treningsalder, brukte såg man på variablene `FAST_NUCLEI_T1` og `TRAINING_AGE` i datasettet `hypertrofi` fra `exscidata`-pakken. Lineær regresjon ble benyttet, da denne er velegnet for å evaluere en potensiell lineær relasjon mellom en avhengig variabel (`FAST_NUCLEI_T1`) og en uavhengig variabel (`TRAINING_AGE`) [@RN2902, s.128-129]. 

Datasettet ble først filtrert for å ekskludere observasjoner med manglende verdier, og vi valgte kun de relevante variablene for analysen. Dataene ble deretter visualisert med scatterplott og en tilhørende regresjonslinje generert av `geom_smooth`, se @fig-plot-training-age-myonuclei. Regresjonslinjen gir en indikasjon på hvordan variablene relaterer seg til hverandre, mens det gråe konfidensintervallet rundt linjen reflekterer usikkerheten i modellen. Et bredt konfidensintervall, som sett her, indikerer større usikkerhet i forholdet mellom variablene [@RN2902 s.240-244]. 


```{r}
#| label: fig-plot-training-age-myonuclei
#| fig-cap: "Sammenheng mellom treningalder og myonuclei per fiber CSA i Type-II"


# Laster inn nødvendige biblioteker
library(exscidata)
library(tidyverse)
library(gt)
library(broom)

# Laster inn data
data("hypertrophy")

# Filtrerer ut NA-verdier før du velger variabler
ds <- hypertrophy %>%
  filter(!is.na(TRAINING_AGE) & !is.na(FAST_NUCLEI_T1)) %>%
  select(PARTICIPANT, GROUP, TRAINING_AGE, FAST_NUCLEI_T1)

# Plotter data uten NA-verdier
ds %>% 
  ggplot(aes(TRAINING_AGE, FAST_NUCLEI_T1)) +
  geom_point(size = 2, fill = "red") +
  geom_smooth(method = "lm", se = TRUE) +
  labs(
    title = "Sammenheng mellom treningserfaring og myonuklei",
    x = "Treningsår", 
    y = "Myonuklei per fiber CSA i Type II") +
  theme_minimal()
```

### Resultat

Tabellen i @tbl-regresjon oppsummerer de statistiske parametrene fra den lineære modellen, inkludert den estimerte koeffisenten, standardfeilen, *t*-verdien og *p*-verdien. Disse komponentene gir innsikt i styrken og usikkerheten rundt sammenhengen mellom variablene. Intercept ble ekskludert fra tabellen, da det representerer vedien av den avhengige variabelen når den uavhengige variabelen er null, noe som ikke er relevant for denne analysen. 

``` {r, results ='asis'}
#| label: tbl-regresjon
#| tbl-cap: "Sammenheng mellom treningserfaring og myonuklei per muskelfiber type-II "

# Lager lineær modell med ds uten NA-verdier
mod1 <- lm(FAST_NUCLEI_T1 ~ TRAINING_AGE, data = ds)

# Henter ut koeffisienter og deres statistikker
model_summary <- tidy(mod1)

# Tilpasser p-verdier og runder av, og fjerner interceptet
model_summary <- model_summary %>%
  mutate(
    term = ifelse(term == "(Intercept)", "Intercept (Konstantledd)", "Treningserfaring (år)"),
    p.value = ifelse(p.value < 0.001, "< 0.001", round(p.value, 3)),
    estimate = round(estimate, 3),
    std.error = round(std.error, 3),
    statistic = round(statistic, 3)
  ) %>%
  # Filtrer ut interceptet
  filter(term != "Intercept (Konstantledd)")
  # Velger å filtrere ut intercept da det ikkje er aktuelt når vi kun skal se om
  # det er en lineær sammenheng mellom dei to variablene

# Lager regresjonstabell med forklarende radnavn
regression_table <- model_summary %>%
  select(term, estimate, std.error, statistic, p.value) %>%
  gt() %>%
  fmt_auto() %>%
  cols_label(
    term = "Term",
    estimate = "Estimert koeffisient",
    std.error = "Standardfeil",
    statistic = md("*t*-verdi"),
    p.value = md("*p*-verdi")
  ) %>%
  tab_source_note(
    source_note = "Notat: p-verdier mindre enn 0.05 anses som statistisk signifikante."
  )

# Vis resultatene
regression_table

```


### Diskusjon

I tabellen kan vi lese av verdiene for estimert koeffisient (regresjonskoeffisient), standardfeil, t-verdi og p-verdi. Den estimerte koeffisenten til "Treningserfaring (år)" indikerer at `FAST_NUCLEI_T1` reduseres med 0.008 per år med treningserfaring. Denne negative endringen er imidletid svak, og standardfeilen er relativt stor i forhold til koeffisienten, noe som tyder på at estimatet er usikkert [@RN2902 s.230-232] 

Standardfeilen gir en indikasjon på hvor mye koeffisienten kan forventes å mellom ulike utvalg [@RN2902 s.230-232]. Selv om standardfeilen numerisk er lav, er dens forhold til koeffisienten avgjørende for tolkningen. I dette tilfellet bør man være forsiktig med å trekke konklusjoner om nøyaktigheten til estimatet.

*t-verdien* sier hvor mange standardavvik den estimerte koeffisienten er fra null. En større t-verdi, enten negativ eller positiv, tyder på at man med større sikkerhet kan si at koeffisienten er signifikant [@RN2902 s.275-276]. Med en t-verdi på -0.104, i vårt tilfelle, kan man ikke med sikkerhet si at det er en signifikant lineær sammenheng mellom `FAST_NUCLEI_T1` og `TRAINING_AGE`. 

*p-verdien* er nært knyttet til t-verdien, og hjelper oss å vurdere om t-verdien er statistisk signifikant. P-verdien representerer sannsynligheten for å observere en teststatistikk som er like ekstrem ,eller like ekstrem, som den t-verdien vi har fått, gitt antagelsen at det ikke er en sammenheng mellom variablene våre [@RN2902 s.264-265]. I vår modell er p-verdien 0.918, noe som tilsier at det er 91,8 % sannsynlighet at man vil observere en t-verdi på -0.008, gitt nullhypotesen. Dermed kan man ikke konkludere med at den uavhengige variabelen TRAINING_AGE har en effekt på den avhengige variabelen FAST_NUCLEI_T1 eller at det finnes en signifikant lineær sammenheng mellom disse variablene [@RN2902, s.265-268].

Det er viktig å understreke at p-verdien kun sier noe om den statistiske signifikansen av resultatene, og ikke om størrelsen på effekten eller dens praktiske relevans [@RN2902 s.285]. I små datasett, som i vårt tilfelle, kan p-verdien være høy selv om det er en reel effekt, fordi små utvalg har lavere statistisk styrke til å påvise sammenhenger [@RN2902 s.285].

Denne analysen har undersøkt sammenhengen mellom treningserfaring og antall myonuclei per type II-muskelfiber, men resultatene viser ingen signifikant lineær sammenheng mellom variablene. Selv om p-verdien indikerer manglende statistisk signifikans, er det viktig å merke seg begrensningene ved små datasett og mulig usikkerhet knyttet til estimatene. 